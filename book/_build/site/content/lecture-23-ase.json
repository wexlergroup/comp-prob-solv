{"version":2,"kind":"Notebook","sha256":"29b40216eceb6afb0b05f3ba263120168372cd8f94f2382547686aeaee1a99f1","slug":"lecture-23-ase","location":"/lecture-23-ase.md","dependencies":[],"frontmatter":{"title":"Chapter 22: Atomic Simulation Environment (ASE)","kernelspec":{"name":"python3","display_name":"comp-prob-solv","language":"python"},"jupytext":{"text_representation":{"extension":".md","format_name":"myst","format_version":"0.13","jupytext_version":"1.16.4"}},"content_includes_title":false,"authors":[{"id":"Robert B. Wexler","name":"Robert B. Wexler"}],"github":"https://github.com/wexlergroup/comp-prob-solv","numbering":{"title":{"offset":1}},"edit_url":"https://github.com/wexlergroup/comp-prob-solv/blob/main/book/lecture-23-ase.md","exports":[{"format":"md","filename":"lecture-23-ase.md","url":"/lecture-23-ase-d3920e45976c88ba240c9df0e08402cd.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Learning Objectives","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"ld4PVxjH3p"}],"identifier":"learning-objectives","label":"Learning Objectives","html_id":"learning-objectives","implicit":true,"key":"PfzMEpGWHC"},{"type":"paragraph","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"By the end of this lecture, you should be able to:","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"cmDHtn5pET"}],"key":"HiLnSr2CG3"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":20,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"Install and set up ASE for molecular simulations.","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"YxGevXYZvq"}],"key":"AH6ES8Nm2V"},{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Create, visualize, and manipulate molecular structures using ASE.","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"zfspAHlIrW"}],"key":"ZNmTyFgTPm"},{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Perform basic computational tasks such as optimizing molecular geometries and calculating energies.","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"Q8zn77ZGL2"}],"key":"Ume72dprg2"},{"type":"listItem","spread":true,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Use ASE in conjunction with machine learning calculators like MACE.","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"cKHcKyPFMs"}],"key":"WHh14czhbl"},{"type":"listItem","spread":true,"position":{"start":{"line":24,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"Model adsorption phenomena on surfaces and perform molecular dynamics simulations.","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"igZHVto6Zs"}],"key":"zhemcXPikg"}],"key":"FoiUGJunfe"},{"type":"heading","depth":2,"position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"Introduction","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"xpaBYuBbGq"}],"identifier":"introduction","label":"Introduction","html_id":"introduction","implicit":true,"key":"dICGjZmcHe"},{"type":"paragraph","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"vdOQVjGBwi"},{"type":"strong","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"Atomic Simulation Environment (ASE)","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"Ff0rc3Nago"}],"key":"KGTMp8xT6S"},{"type":"text","value":" is a powerful Python library for setting up, manipulating, and analyzing atomistic simulations. ASE provides tools to create and visualize molecular structures, perform geometry optimizations, calculate energies and forces, and run molecular dynamics simulations. It serves as an interface to various computational chemistry codes and can be extended with custom calculators, making it a versatile tool for computational materials science and chemistry.","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"iKV4ugbCMA"}],"key":"TTqwa2a573"},{"type":"paragraph","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"In this lecture, we’ll explore how to use ASE for common tasks in computational chemistry, such as creating molecules, optimizing structures, and simulating adsorption on surfaces. We’ll also see how ASE integrates with machine learning calculators like MACE to accelerate simulations.","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"p1uzx83OKi"}],"key":"RGgqcVw0of"},{"type":"heading","depth":2,"position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"text","value":"Installing ASE","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"key":"y907WsDITM"}],"identifier":"installing-ase","label":"Installing ASE","html_id":"installing-ase","implicit":true,"key":"nr3AfOVdry"},{"type":"paragraph","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"text","value":"ASE can be installed using ","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"ViRg9gXe6c"},{"type":"inlineCode","value":"pip","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"EfJsb3XHm0"},{"type":"text","value":":","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"jrqiT594pE"}],"key":"tPHlJqODSG"},{"type":"code","lang":"bash","value":"pip install ase","position":{"start":{"line":36,"column":1},"end":{"line":38,"column":1}},"key":"GyBJTx0Eei"},{"type":"paragraph","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"text","value":"Alternatively, if you’re using Anaconda, you can install it via ","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"eVvM1muAmr"},{"type":"inlineCode","value":"conda","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"Zt5g3oq0m2"},{"type":"text","value":":","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"VeBvzQYXTT"}],"key":"O6tAZ9ulMv"},{"type":"code","lang":"bash","value":"conda install -c conda-forge ase","position":{"start":{"line":42,"column":1},"end":{"line":44,"column":1}},"key":"GYxTU6V3CV"},{"type":"heading","depth":2,"position":{"start":{"line":46,"column":1},"end":{"line":46,"column":1}},"children":[{"type":"text","value":"Creating a Molecule","position":{"start":{"line":46,"column":1},"end":{"line":46,"column":1}},"key":"zmhhEykvho"}],"identifier":"creating-a-molecule","label":"Creating a Molecule","html_id":"creating-a-molecule","implicit":true,"key":"Oo96xgb7zx"},{"type":"paragraph","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"children":[{"type":"text","value":"Let’s create a simple molecule using ASE. We’ll start by creating a carbon monoxide (CO) molecule.","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"key":"RLvwjBrvVc"}],"key":"puHeBzLnGR"}],"key":"P22PBKpDYa"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from ase import Atoms\n\n# Create a CO molecule with specified positions\natoms = Atoms('CO', positions=[(0, 0, 0), (1.2, 0, 0)])\n\n# Print the molecule's information\nprint(atoms)","key":"FwHGwdldzg"},{"type":"output","id":"YCgtfAho9iEhypoisY0DT","data":[],"key":"SIO29zXMRK"}],"key":"rI59Bx3qTS"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"children":[{"type":"text","value":"Visualizing a Molecule","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"pac1Y1h4lH"}],"identifier":"visualizing-a-molecule","label":"Visualizing a Molecule","html_id":"visualizing-a-molecule","implicit":true,"key":"HYcZUhkYzq"},{"type":"paragraph","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"children":[{"type":"text","value":"ASE can visualize molecules using Matplotlib. Let’s visualize the CO molecule we created.","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"uQxJnVo1lv"}],"key":"hYYOmuor8B"}],"key":"xVD93RYEVY"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import matplotlib.pyplot as plt\nfrom ase.visualize.plot import plot_atoms\n\n# Plot the molecule\nfig, ax = plt.subplots(figsize=(6, 6))\nplot_atoms(atoms, ax, radii=0.5)\nax.set_title('CO Molecule')\nplt.show()","key":"mp3JWNKN4e"},{"type":"output","id":"MHzy5e1y-78FTvoId8UCZ","data":[],"key":"z5p9Tj86lV"}],"key":"OqP2zPCDcM"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":75,"column":1},"end":{"line":75,"column":1}},"children":[{"type":"text","value":"Writing a Molecule to a File","position":{"start":{"line":75,"column":1},"end":{"line":75,"column":1}},"key":"W9z7vwsqT1"}],"identifier":"writing-a-molecule-to-a-file","label":"Writing a Molecule to a File","html_id":"writing-a-molecule-to-a-file","implicit":true,"key":"CUWWlOGOY0"},{"type":"paragraph","position":{"start":{"line":77,"column":1},"end":{"line":77,"column":1}},"children":[{"type":"text","value":"We can write the molecule to a file in various formats. Here, we’ll write it to an XYZ file.","position":{"start":{"line":77,"column":1},"end":{"line":77,"column":1}},"key":"PemO6ILgMb"}],"key":"kEy4t4NAU5"}],"key":"MyAQcDwqDR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from ase.io import write\n\n# Write the molecule to an XYZ file\nwrite('CO.xyz', atoms)","key":"spnAUvwwdu"},{"type":"output","id":"bdJUbOS9VPvgKMAFOgQu3","data":[],"key":"mlrCzJPBj4"}],"key":"GvFCZCiEMc"},{"type":"block","children":[{"type":"admonition","kind":"note","children":[{"type":"admonitionTitle","children":[{"type":"link","url":"http://CO.xyz","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"children":[{"type":"text","value":"CO.xyz","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"UBaYkKHh2z"}],"urlSource":"http://CO.xyz","key":"GxXaJWIpcg"}],"key":"rc5ITcMFtj"},{"type":"code","lang":"none","value":"2\nProperties=species:S:1:pos:R:3\nC        0.00000000       0.00000000       0.00000000\nO        1.20000000       0.00000000       0.00000000","position":{"start":{"line":89,"column":1},"end":{"line":94,"column":1}},"key":"xalbBrS3iS"}],"key":"b9qQKSTBz0"},{"type":"heading","depth":2,"position":{"start":{"line":97,"column":1},"end":{"line":97,"column":1}},"children":[{"type":"text","value":"Reading a Molecule from a File","position":{"start":{"line":97,"column":1},"end":{"line":97,"column":1}},"key":"QR04ZqXVzV"}],"identifier":"reading-a-molecule-from-a-file","label":"Reading a Molecule from a File","html_id":"reading-a-molecule-from-a-file","implicit":true,"key":"piLsgqHMLr"},{"type":"paragraph","position":{"start":{"line":99,"column":1},"end":{"line":99,"column":1}},"children":[{"type":"text","value":"We can read the molecule back from the file we just created.","position":{"start":{"line":99,"column":1},"end":{"line":99,"column":1}},"key":"ZF6dbvfAPL"}],"key":"fDRhkCxqgw"}],"key":"HkwK4gws14"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from ase.io import read\n\n# Read the molecule from the XYZ file\natoms = read('CO.xyz')\n\n# Print the molecule's information\nprint(atoms)","key":"ZO4wI9ekJA"},{"type":"output","id":"H1jTdjlkiwNP2ai7LRqB6","data":[],"key":"TsIzVI6FJc"}],"key":"Tp7xcGzVvt"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":111,"column":1},"end":{"line":111,"column":1}},"children":[{"type":"text","value":"Using a Machine Learning Calculator: MACE","position":{"start":{"line":111,"column":1},"end":{"line":111,"column":1}},"key":"Pxo5lX3rjq"}],"identifier":"using-a-machine-learning-calculator-mace","label":"Using a Machine Learning Calculator: MACE","html_id":"using-a-machine-learning-calculator-mace","implicit":true,"key":"weMi1rxzhI"},{"type":"paragraph","position":{"start":{"line":113,"column":1},"end":{"line":113,"column":1}},"children":[{"type":"link","url":"https://arxiv.org/abs/2401.00096","position":{"start":{"line":113,"column":1},"end":{"line":113,"column":1}},"children":[{"type":"text","value":"MACE","position":{"start":{"line":113,"column":1},"end":{"line":113,"column":1}},"key":"wANS4wk8uT"}],"urlSource":"https://arxiv.org/abs/2401.00096","key":"bRr1E3SiX0"},{"type":"text","value":" is a higher-order equivariant message-passing neural network for fast and accurate force fields. We’ll use MACE as a calculator in ASE.","position":{"start":{"line":113,"column":1},"end":{"line":113,"column":1}},"key":"gN6UmS0end"}],"key":"nLCd5qlbgV"},{"type":"paragraph","position":{"start":{"line":115,"column":1},"end":{"line":115,"column":1}},"children":[{"type":"text","value":"First, install MACE:","position":{"start":{"line":115,"column":1},"end":{"line":115,"column":1}},"key":"xG48onA9jk"}],"key":"nKA7X8cx0T"},{"type":"code","lang":"bash","value":"pip install mace-torch","position":{"start":{"line":117,"column":1},"end":{"line":119,"column":1}},"key":"Z5RVQA3Md9"}],"key":"Pkq18jHLa9"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from mace.calculators import mace_mp\n\n# Set up the MACE calculator\nmacemp = mace_mp()\n\n# Attach the calculator to the molecule\natoms.calc = macemp","visibility":"show","key":"tUmsUjBCtV"},{"type":"output","id":"sQFVAB9x_b1y3cjGwKzjV","data":[],"visibility":"hide","key":"pvSQ9KLDEH"}],"data":{"tags":[]},"visibility":"show","key":"SHfP6Fo2y1"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":132,"column":1},"end":{"line":132,"column":1}},"children":[{"type":"text","value":"Geometry Optimization","position":{"start":{"line":132,"column":1},"end":{"line":132,"column":1}},"key":"CQmrtRLKcz"}],"identifier":"geometry-optimization","label":"Geometry Optimization","html_id":"geometry-optimization","implicit":true,"key":"iAqacgnP6L"},{"type":"paragraph","position":{"start":{"line":134,"column":1},"end":{"line":134,"column":1}},"children":[{"type":"text","value":"We can optimize the geometry of the CO molecule using the BFGS algorithm.","position":{"start":{"line":134,"column":1},"end":{"line":134,"column":1}},"key":"oJSQXB42nq"}],"key":"sWuEs0Ndd8"}],"key":"SBgAvxjHrQ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from ase.optimize import BFGS\n\n# Optimize the molecule\nopt = BFGS(atoms)\nopt.run(fmax=0.05)\n\n# Print the optimized bond length\nbond_length = atoms.get_distance(0, 1)\nprint(f\"Optimized C–O bond length: {bond_length:.3f} Å\")","key":"j536UI0K0G"},{"type":"output","id":"45o8udg6BJL_eJifg3dK-","data":[],"key":"BiVVr8QBxT"}],"key":"LapGITn6rL"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":148,"column":1},"end":{"line":148,"column":1}},"children":[{"type":"text","value":"The optimized bond length should be close to the experimental value of approximately 1.128 Å.","position":{"start":{"line":148,"column":1},"end":{"line":148,"column":1}},"key":"EvCl2W6kBD"}],"key":"gVg8h5HFk9"},{"type":"heading","depth":2,"position":{"start":{"line":150,"column":1},"end":{"line":150,"column":1}},"children":[{"type":"text","value":"Calculating the Atomization Energy","position":{"start":{"line":150,"column":1},"end":{"line":150,"column":1}},"key":"aw9NAOvaKH"}],"identifier":"calculating-the-atomization-energy","label":"Calculating the Atomization Energy","html_id":"calculating-the-atomization-energy","implicit":true,"key":"NlX431u7Q7"},{"type":"paragraph","position":{"start":{"line":152,"column":1},"end":{"line":152,"column":1}},"children":[{"type":"text","value":"We can calculate the atomization energy of CO by comparing the total energy of the molecule to the energies of isolated atoms.","position":{"start":{"line":152,"column":1},"end":{"line":152,"column":1}},"key":"uKSDI3eD47"}],"key":"GfYiPHZWlU"}],"key":"l6cYtEThhe"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Create isolated atoms\nC = Atoms('C', positions=[(0, 0, 0)])\nO = Atoms('O', positions=[(0, 0, 0)])\n\n# Attach the calculator to the atoms\nC.calc = macemp\nO.calc = macemp\n\n# Calculate the energies\nE_CO = atoms.get_potential_energy()\nE_C = C.get_potential_energy()\nE_O = O.get_potential_energy()\n\n# Print the energies\nprint(f\"E_CO: {E_CO:.2f} eV\")\nprint(f\"E_C: {E_C:.2f} eV\")\nprint(f\"E_O: {E_O:.2f} eV\")\n\n# Calculate the atomization energy\natomization_energy = E_C + E_O - E_CO\n\nprint(f\"Atomization Energy of CO: {atomization_energy:.2f} eV\")","key":"qJKBH0o4FV"},{"type":"output","id":"sy8Nvf27zwmHJklRbQbqP","data":[],"key":"VxYDH0UAfQ"}],"key":"iUPq72rizN"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":179,"column":1},"end":{"line":179,"column":1}},"children":[{"type":"text","value":"The atomization energy should be close to the experimental value of approximately 11.16 eV.","position":{"start":{"line":179,"column":1},"end":{"line":179,"column":1}},"key":"p1e3BJ607A"}],"key":"zVVR3cPZ2d"},{"type":"heading","depth":2,"position":{"start":{"line":181,"column":1},"end":{"line":181,"column":1}},"children":[{"type":"text","value":"Example: CO Adsorption on Pt(100)","position":{"start":{"line":181,"column":1},"end":{"line":181,"column":1}},"key":"bZ5trZOxKy"}],"identifier":"example-co-adsorption-on-pt-100","label":"Example: CO Adsorption on Pt(100)","html_id":"example-co-adsorption-on-pt-100","implicit":true,"key":"XAm4JnA2zC"},{"type":"paragraph","position":{"start":{"line":183,"column":1},"end":{"line":183,"column":1}},"children":[{"type":"text","value":"Let’s simulate the adsorption of CO on a platinum (Pt) (100) surface using ASE.","position":{"start":{"line":183,"column":1},"end":{"line":183,"column":1}},"key":"P8LLkGLlzu"}],"key":"YG8rTvhHVG"},{"type":"heading","depth":3,"position":{"start":{"line":185,"column":1},"end":{"line":185,"column":1}},"children":[{"type":"text","value":"Creating the Pt(100) Surface","position":{"start":{"line":185,"column":1},"end":{"line":185,"column":1}},"key":"XU00HOQfI0"}],"identifier":"creating-the-pt-100-surface","label":"Creating the Pt(100) Surface","html_id":"creating-the-pt-100-surface","implicit":true,"key":"bUp48mriri"}],"key":"PuRTGBkkS5"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from ase.build import fcc100\n\n# Create the Pt(100) surface with specified size and vacuum\nslab = fcc100('Pt', size=(2, 2, 3), vacuum=10.0)\n\n# Visualize the Pt(100) surface\nfig, axs = plt.subplot_mosaic([['side', 'top']], figsize=(12, 6))\nplot_atoms(slab, axs['side'], radii=0.5, rotation='90x,90y')\nplot_atoms(slab, axs['top'], radii=0.5)\naxs['side'].set_title('Side View')\naxs['top'].set_title('Top View')\nplt.tight_layout()\nplt.show()","key":"dwlczzdMtX"},{"type":"output","id":"CbKHS0ZymWqd4zkkJBUQr","data":[],"key":"QwVveQH53U"}],"key":"lFzrg6b9DX"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":203,"column":1},"end":{"line":203,"column":1}},"children":[{"type":"text","value":"Adding CO Adsorbate","position":{"start":{"line":203,"column":1},"end":{"line":203,"column":1}},"key":"zPdct5ZoAZ"}],"identifier":"adding-co-adsorbate","label":"Adding CO Adsorbate","html_id":"adding-co-adsorbate","implicit":true,"key":"hKN9ZzOpcA"}],"key":"Rf0LsImkkD"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from ase.build import molecule\nfrom ase.build.surface import add_adsorbate\n\n# Create the CO molecule\nco_molecule = molecule('CO')\n\n# Adjust the position of CO\nco_molecule.set_distance(0, 1, 1.14)\n\n# Add the CO molecule to the Pt(100) surface\nadd_adsorbate(slab, co_molecule, height=3, position=(3, 3))\n\n# Visualize the slab with CO adsorbed\nfig, axs = plt.subplot_mosaic([['side', 'top']], figsize=(12, 6))\nplot_atoms(slab, axs['side'], radii=0.5, rotation='-90x')\nplot_atoms(slab, axs['top'], radii=0.5)\naxs['side'].set_title('Side View with CO Adsorbed')\naxs['top'].set_title('Top View with CO Adsorbed')\nplt.tight_layout()\nplt.show()","key":"bhpbWTcwda"},{"type":"output","id":"hti4CoIk6cCn8ZAJy94YP","data":[],"key":"UjpEdXJMpq"}],"key":"ZgmywCw9uI"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":228,"column":1},"end":{"line":228,"column":1}},"children":[{"type":"text","value":"Optimization of the Adsorbed System","position":{"start":{"line":228,"column":1},"end":{"line":228,"column":1}},"key":"tChj5w8r7W"}],"identifier":"optimization-of-the-adsorbed-system","label":"Optimization of the Adsorbed System","html_id":"optimization-of-the-adsorbed-system","implicit":true,"key":"WK67ylE94y"}],"key":"qFSeQTZ7p2"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Attach the calculator to the slab\nslab.calc = macemp\n\n# Optimize the slab with CO adsorbed\nopt = BFGS(slab, logfile='Pt100_CO.log')\nopt.run(fmax=0.05)\n\n# Visualize the optimized structure\nfig, axs = plt.subplot_mosaic([['side', 'top']], figsize=(12, 6))\nplot_atoms(slab, axs['side'], radii=0.5, rotation='-90x')\nplot_atoms(slab, axs['top'], radii=0.5)\naxs['side'].set_title('Optimized Side View')\naxs['top'].set_title('Optimized Top View')\nplt.tight_layout()\nplt.show()","key":"u1MQ5Xc0Cx"},{"type":"output","id":"0dghJJml-7-1F4miNwK0A","data":[],"key":"PgGC3CzwUN"}],"key":"YxkNhpV5A7"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":248,"column":1},"end":{"line":248,"column":1}},"children":[{"type":"text","value":"Calculating the Adsorption Energy","position":{"start":{"line":248,"column":1},"end":{"line":248,"column":1}},"key":"PQQiDMDXXT"}],"identifier":"calculating-the-adsorption-energy","label":"Calculating the Adsorption Energy","html_id":"calculating-the-adsorption-energy","implicit":true,"key":"NNE8vEOsuF"},{"type":"paragraph","position":{"start":{"line":250,"column":1},"end":{"line":250,"column":1}},"children":[{"type":"text","value":"The adsorption energy can be calculated using the energies of the slab with and without CO, and the energy of the isolated CO molecule.","position":{"start":{"line":250,"column":1},"end":{"line":250,"column":1}},"key":"cBl8tQyArV"}],"key":"n1yoclOtB1"}],"key":"jqxEwNMrqg"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Energy of the slab with CO adsorbed\nE_slab_CO = slab.get_potential_energy()\n\n# Create and calculate energy of the clean slab\nslab_clean = fcc100('Pt', size=(2, 2, 3), vacuum=10.0)\nslab_clean.calc = macemp\n\n# Optimize the clean slab\nopt_clean = BFGS(slab_clean)\nopt_clean.run(fmax=0.05)\n\nE_slab = slab_clean.get_potential_energy()\n\n# Recalculate E_CO if needed\nE_CO = atoms.get_potential_energy()\n\n# Calculate the adsorption energy\nadsorption_energy = E_slab_CO - E_slab - E_CO\n\nprint(f\"Adsorption Energy: {adsorption_energy:.2f} eV\")","key":"SfKJvcWQeQ"},{"type":"output","id":"oyzocsPHF8WftaQcZv7vp","data":[],"key":"zhMx12X9gM"}],"key":"nB9yfgygeg"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"children":[{"type":"text","value":"The adsorption energy should be negative, indicating that adsorption is energetically favorable. The value should be in the range of approximately -1.73 eV to -1.64 eV, consistent with ","position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"key":"ls1R8nDqeI"},{"type":"link","url":"https://www.catalysis-hub.org/","position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"children":[{"type":"text","value":"computational data","position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"key":"lX85hYIgGc"}],"urlSource":"https://www.catalysis-hub.org/","key":"wPe5T0e5Y3"},{"type":"text","value":".","position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"key":"tfTFXvhrYw"}],"key":"owWanHRNw8"},{"type":"heading","depth":2,"position":{"start":{"line":277,"column":1},"end":{"line":277,"column":1}},"children":[{"type":"text","value":"Example: Molecular Dynamics of CO on Pt(100)","position":{"start":{"line":277,"column":1},"end":{"line":277,"column":1}},"key":"a91Fnd3v1s"}],"identifier":"example-molecular-dynamics-of-co-on-pt-100","label":"Example: Molecular Dynamics of CO on Pt(100)","html_id":"example-molecular-dynamics-of-co-on-pt-100","implicit":true,"key":"nfkMVHsTCL"},{"type":"paragraph","position":{"start":{"line":279,"column":1},"end":{"line":279,"column":1}},"children":[{"type":"text","value":"We can perform molecular dynamics (MD) simulations to study the behavior of CO on the Pt(100) surface at finite temperatures.","position":{"start":{"line":279,"column":1},"end":{"line":279,"column":1}},"key":"vHVxTVskQv"}],"key":"gpaPiqrs8r"},{"type":"heading","depth":3,"position":{"start":{"line":281,"column":1},"end":{"line":281,"column":1}},"children":[{"type":"text","value":"Setting Up Molecular Dynamics","position":{"start":{"line":281,"column":1},"end":{"line":281,"column":1}},"key":"iHZtVtv9Dc"}],"identifier":"setting-up-molecular-dynamics","label":"Setting Up Molecular Dynamics","html_id":"setting-up-molecular-dynamics","implicit":true,"key":"SdVqOGyFYn"}],"key":"bbY9DE40qu"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from ase import units\nfrom ase.md.andersen import Andersen\nfrom ase.md.velocitydistribution import MaxwellBoltzmannDistribution\nimport matplotlib.pyplot as plt\n\n# Set the temperature and time step\ntemperature = 300  # Kelvin\ntimestep = 1.0  # fs\n\n# Initialize velocities according to the Maxwell-Boltzmann distribution\nMaxwellBoltzmannDistribution(slab, temperature_K=temperature)\n\n# Set up the Andersen dynamics\ndyn = Andersen(slab, timestep * units.fs, temperature_K=temperature, andersen_prob=0.1)\n\n# Lists to store energies\nkinetic_energies = []\npotential_energies = []\ntotal_energies = []\n\n# Function to store energies\ndef store_energies():\n    kinetic_energy = slab.get_kinetic_energy()\n    potential_energy = slab.get_potential_energy()\n    total_energy = kinetic_energy + potential_energy\n    kinetic_energies.append(kinetic_energy)\n    potential_energies.append(potential_energy)\n    total_energies.append(total_energy)\n\n# Attach the function to the dynamics\ndyn.attach(store_energies, interval=1)\n\n# Run the MD simulation for 100 steps\ndyn.run(200)\n\n# Plot the energy during the simulation\nfig, axs = plt.subplots(1, 3, figsize=(18, 6))\n\naxs[0].set_title('Kinetic Energy')\naxs[0].plot(kinetic_energies)\naxs[0].set_xlabel('Time Step')\naxs[0].set_ylabel('Energy (eV)')\n\naxs[1].set_title('Potential Energy')\naxs[1].plot(potential_energies)\naxs[1].set_xlabel('Time Step')\naxs[1].set_ylabel('Energy (eV)')\n\naxs[2].set_title('Total Energy')\naxs[2].plot(total_energies)\naxs[2].set_xlabel('Time Step')\naxs[2].set_ylabel('Energy (eV)')\n\nplt.tight_layout()\nplt.show()","key":"TPCUZ5kCXJ"},{"type":"output","id":"VFZeMaQJ8k3P5FhPNRXpK","data":[],"key":"iz4Bczzd4p"}],"key":"Nx8JhmG42K"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":341,"column":1},"end":{"line":341,"column":1}},"children":[{"type":"text","value":"Visualizing the MD Simulation","position":{"start":{"line":341,"column":1},"end":{"line":341,"column":1}},"key":"hT6jDBBj6J"}],"identifier":"visualizing-the-md-simulation","label":"Visualizing the MD Simulation","html_id":"visualizing-the-md-simulation","implicit":true,"key":"kvxqyl6QpZ"},{"type":"paragraph","position":{"start":{"line":343,"column":1},"end":{"line":343,"column":1}},"children":[{"type":"text","value":"After the simulation, we can visualize the final configuration.","position":{"start":{"line":343,"column":1},"end":{"line":343,"column":1}},"key":"lWBj1ubfyG"}],"key":"znzDIhQnol"}],"key":"gY41crFqiO"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Visualize the slab after MD simulation\nfig, axs = plt.subplot_mosaic([['side', 'top']], figsize=(12, 6))\nplot_atoms(slab, axs['side'], radii=0.5, rotation='-90x')\nplot_atoms(slab, axs['top'], radii=0.5)\naxs['side'].set_title('Post-MD Side View')\naxs['top'].set_title('Post-MD Top View')\nplt.tight_layout()\nplt.show()","key":"GGdIbOMOl5"},{"type":"output","id":"B7FE-AeTYKa0GSrwpi7Ln","data":[],"key":"K8KtgBd2R9"}],"key":"yxGNljNT3b"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":356,"column":1},"end":{"line":356,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":356,"column":1},"end":{"line":356,"column":1}},"key":"C8CjU1Fsfh"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"JlIk8miWKk"},{"type":"paragraph","position":{"start":{"line":358,"column":1},"end":{"line":358,"column":1}},"children":[{"type":"text","value":"In this lecture, we explored the Atomic Simulation Environment (ASE) and its capabilities for molecular modeling and simulations. We learned how to:","position":{"start":{"line":358,"column":1},"end":{"line":358,"column":1}},"key":"hvgq305eEc"}],"key":"xn4lOw2ETS"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":360,"column":1},"end":{"line":367,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":360,"column":1},"end":{"line":360,"column":1}},"children":[{"type":"text","value":"Install and set up ASE for simulations.","position":{"start":{"line":360,"column":1},"end":{"line":360,"column":1}},"key":"ez3gpAg7Vo"}],"key":"xKxRaImuQR"},{"type":"listItem","spread":true,"position":{"start":{"line":361,"column":1},"end":{"line":361,"column":1}},"children":[{"type":"text","value":"Create and visualize molecular structures.","position":{"start":{"line":361,"column":1},"end":{"line":361,"column":1}},"key":"UN4bH2WakM"}],"key":"h3VUxfIouD"},{"type":"listItem","spread":true,"position":{"start":{"line":362,"column":1},"end":{"line":362,"column":1}},"children":[{"type":"text","value":"Write and read molecular data to and from files.","position":{"start":{"line":362,"column":1},"end":{"line":362,"column":1}},"key":"KCtVIvrNXa"}],"key":"i8YoHfepus"},{"type":"listItem","spread":true,"position":{"start":{"line":363,"column":1},"end":{"line":363,"column":1}},"children":[{"type":"text","value":"Use machine learning calculators like MACE for efficient computations.","position":{"start":{"line":363,"column":1},"end":{"line":363,"column":1}},"key":"k2RA4m2Vte"}],"key":"kpE2P3hiZO"},{"type":"listItem","spread":true,"position":{"start":{"line":364,"column":1},"end":{"line":364,"column":1}},"children":[{"type":"text","value":"Perform geometry optimizations and calculate energies, such as atomization and adsorption energies.","position":{"start":{"line":364,"column":1},"end":{"line":364,"column":1}},"key":"KwRqo6vwQq"}],"key":"HGJHAvfDZP"},{"type":"listItem","spread":true,"position":{"start":{"line":365,"column":1},"end":{"line":365,"column":1}},"children":[{"type":"text","value":"Model surface phenomena like CO adsorption on Pt(100).","position":{"start":{"line":365,"column":1},"end":{"line":365,"column":1}},"key":"ZXGfPkWaTT"}],"key":"RIaxTpjezd"},{"type":"listItem","spread":true,"position":{"start":{"line":366,"column":1},"end":{"line":367,"column":1}},"children":[{"type":"text","value":"Conduct molecular dynamics simulations to study temperature-dependent behavior.","position":{"start":{"line":366,"column":1},"end":{"line":366,"column":1}},"key":"dL1QoyYqy1"}],"key":"oh7MGE2PMp"}],"key":"K154QMFCsR"},{"type":"paragraph","position":{"start":{"line":368,"column":1},"end":{"line":368,"column":1}},"children":[{"type":"text","value":"ASE provides a flexible and powerful framework for computational studies in chemistry and materials science, allowing researchers to perform a wide range of simulations with ease.","position":{"start":{"line":368,"column":1},"end":{"line":368,"column":1}},"key":"i0xpMxe7te"}],"key":"jtMhs5LEIS"}],"key":"ZC3eJTSlnI"}],"key":"TuTOlbannB"},"references":{"cite":{"order":[],"data":{}}}}